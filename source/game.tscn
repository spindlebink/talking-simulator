[gd_scene load_steps=30 format=2]

[ext_resource path="res://source/canvas.gd" type="Script" id=1]
[ext_resource path="res://source/color_zones.gd" type="Script" id=2]
[ext_resource path="res://resources/fonts/libre_baskerville_bold.tres" type="DynamicFont" id=3]
[ext_resource path="res://resources/fonts/libre_baskerville_regular.tres" type="DynamicFont" id=4]
[ext_resource path="res://resources/fonts/libre_baskerville_italic.tres" type="DynamicFont" id=5]
[ext_resource path="res://resources/fonts/worksans_bold.tres" type="DynamicFont" id=6]
[ext_resource path="res://resources/fonts/worksans_italic.tres" type="DynamicFont" id=7]
[ext_resource path="res://resources/fonts/worksans_regular.tres" type="DynamicFont" id=8]
[ext_resource path="res://source/script_data.gd" type="Script" id=9]
[ext_resource path="res://source/game.gd" type="Script" id=10]
[ext_resource path="res://source/text_display.gd" type="Script" id=11]
[ext_resource path="res://resources/fonts/patua_one_regular.tres" type="DynamicFont" id=12]
[ext_resource path="res://source/inverter.gd" type="Script" id=13]
[ext_resource path="res://source/big_text.gd" type="Script" id=14]
[ext_resource path="res://source/score_panel.gd" type="Script" id=15]
[ext_resource path="res://resources/sound/drone.ogg" type="AudioStream" id=16]
[ext_resource path="res://resources/sound/ambience.ogg" type="AudioStream" id=17]
[ext_resource path="res://resources/sound/bad.ogg" type="AudioStream" id=18]
[ext_resource path="res://resources/sound/applause.ogg" type="AudioStream" id=19]
[ext_resource path="res://source/sounds.gd" type="Script" id=20]
[ext_resource path="res://resources/sound/finish_applause.ogg" type="AudioStream" id=21]

[sub_resource type="Shader" id=1]
code = "// Ported from https://www.shadertoy.com/view/st3GzM

shader_type canvas_item;

const float PI = 3.14159265358979323846;

float h21(vec2 p)
{
	vec3 h = fract(p.xyx * vec3(141.212, 373.184, 107.63));
	h *= dot(h, vec3(p, 1848.177));
	return fract(h.x + (h.y * h.z));
}

vec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ){
	return a + b*cos(2.*PI*(c*t+d));
}

vec2 rotate2d(vec2 vec, float angle)
{
	float s = sin(angle);
	float c = cos(angle);
	mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));
	return vec * rotationMatrix;
}

void fragment()
{
	vec2 uv = SCREEN_UV * 4.0;
	uv = rotate2d(uv, 0.21 * TIME);
	uv.y += 0.1 * tanh(4. * cos(10. * uv.x +  TIME));
	uv += 0.5 * vec2(tanh(4. * cos(0.1 * TIME)), tanh(4. * sin(0.1 * TIME)));

	float r = length(uv);
	float a = atan(uv.y, uv.x);
	float sc = 20. * tanh(0.2 * TIME) + 3. * tanh(2. * cos(.5 * r + sin(1. * TIME + tanh(2. * cos(8. * r + 2. * a - 4. * TIME))) + 0. * h21(uv) - TIME));
	vec2 fpos = fract(sc * uv) - 0.5;
	vec2 ipos = floor(sc * uv) + 0.5;

	float d = length(fpos) * max(1.6 * r, 0.8 * length(fpos));
	d *= 1.5;
	d *= .5 + .5 * sc * tanh(2. * cos(1.5 * h21(ipos) + 1./(1. + length(uv)) * 10. * d - 4. * TIME));
	float s = step(d, 0.2 + (sc - 7. )/3. * 0.15);

	vec3 e = vec3(.5);
	vec3 al = pal(h21(10. * ipos)+ 0.1 * TIME, e * 1.2, e, e * 2.0, vec3(0,0.33,0.66));
	vec3 col = clamp(al,0.,1.);
	col = mix(col, vec3(step(col.x,0.9)), .5 + .5 * tanh(10. * cos(8. * tanh(4. * cos(1. * TIME)) + TIME +  10.*r + a)));
	col *= vec3(s);

	// Output to screen
	COLOR = vec4(col, 1.0);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "// https://godotshaders.com/shader/moving-rainbow-gradient/

shader_type canvas_item;

const float PI = 3.1415926535;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/strength = 0.768
shader_param/speed = 0.5
shader_param/angle = 0.0

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

void fragment()
{
	vec3 c = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0).rgb;
	COLOR.rgb = vec3(1.0) - c;
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[sub_resource type="DynamicFontData" id=7]
antialiased = false
font_path = "res://resources/fonts/PatuaOne-Regular.ttf"

[sub_resource type="DynamicFont" id=8]
size = 64
outline_size = 10
outline_color = Color( 1, 0, 0, 1 )
extra_spacing_char = 2
font_data = SubResource( 7 )

[node name="Game" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 10 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sounds" type="Node" parent="."]
script = ExtResource( 20 )

[node name="Drone" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 16 )
volume_db = -2.403
autoplay = true
bus = "Ambience"

[node name="Ambience" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 17 )
autoplay = true
bus = "Ambience"

[node name="GoodFeedback" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 19 )

[node name="BadFeedback" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 18 )

[node name="FinishFeedback" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 21 )
volume_db = 7.068

[node name="ScriptData" type="Node" parent="."]
script = ExtResource( 9 )

[node name="Background" type="ColorRect" parent="."]
modulate = Color( 1, 1, 1, 0.321569 )
show_behind_parent = true
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 80.0
margin_right = -80.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LetterboxL" type="ColorRect" parent="."]
anchor_bottom = 1.0
margin_right = 80.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LetterboxR" type="ColorRect" parent="."]
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -80.0
grow_horizontal = 0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TheZone" type="ColorRect" parent="."]
show_behind_parent = true
material = SubResource( 4 )
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Canvas" type="Node2D" parent="."]
position = Vector2( 23.9729, 0 )
script = ExtResource( 1 )

[node name="Line2D" type="Line2D" parent="Canvas"]
points = PoolVector2Array( 204.8, 210, 409.6, 210, 307.2, 420, 563.2, 420, 563.2, 60, 614.4, 60, 614.4, 420 )
width = 8.0
default_color = Color( 0, 0, 0, 1 )

[node name="ColorZones" type="Node2D" parent="Canvas"]
modulate = Color( 1, 1, 1, 0.509804 )
show_behind_parent = true
script = ExtResource( 2 )
zone_1_color = Color( 1, 0.901961, 0.266667, 1 )
zone_2_color = Color( 1, 0, 0, 1 )

[node name="TextDisplay" type="Control" parent="."]
script = ExtResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextLeft" type="RichTextLabel" parent="TextDisplay"]
margin_left = 217.0
margin_top = 125.0
margin_right = 480.0
margin_bottom = 153.0
custom_fonts/italics_font = ExtResource( 5 )
custom_fonts/bold_font = ExtResource( 3 )
custom_fonts/normal_font = ExtResource( 4 )
custom_colors/default_color = Color( 0, 0, 0, 1 )
bbcode_enabled = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextRight" type="RichTextLabel" parent="TextDisplay"]
margin_left = 522.596
margin_top = 477.617
margin_right = 785.596
margin_bottom = 505.617
custom_fonts/italics_font = ExtResource( 7 )
custom_fonts/bold_font = ExtResource( 6 )
custom_fonts/normal_font = ExtResource( 8 )
custom_colors/default_color = Color( 0, 0, 0, 1 )
bbcode_enabled = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="TextDisplay"]
wait_time = 0.05
one_shot = true

[node name="InstructionsLabel" type="RichTextLabel" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -40.0
custom_fonts/normal_font = ExtResource( 12 )
custom_colors/default_color = Color( 0, 0, 0, 1 )
bbcode_enabled = true
bbcode_text = "[center]PRESS ANY KEY WHEN  [rainbow][wave]THE SELECTOR[/wave][/rainbow] IS OVER [rainbow][wave]THE ZONE[/wave][/rainbow][/center]"
text = "PRESS ANY KEY WHEN  THE SELECTOR IS OVER THE ZONE"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Inverter" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 80.0
margin_right = -80.0
script = ExtResource( 13 )

[node name="FlashTimer" type="Timer" parent="Inverter"]
wait_time = 0.05
one_shot = true

[node name="ScorePanel" type="ColorRect" parent="Inverter"]
margin_right = 120.0
margin_bottom = 40.0
color = Color( 1, 0, 0, 0.529412 )
script = ExtResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScoreText" type="RichTextLabel" parent="Inverter/ScorePanel"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
grow_vertical = 2
rect_clip_content = false
custom_fonts/normal_font = ExtResource( 12 )
bbcode_enabled = true
bbcode_text = "[center][rainbow]score: 0[/rainbow][/center]"
text = "score: 0"
fit_content_height = true

[node name="InverterPanel" type="ColorRect" parent="Inverter"]
visible = false
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BigText" type="Label" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
custom_fonts/font = SubResource( 8 )
custom_colors/font_color = Color( 0.054902, 0, 1, 1 )
align = 1
valign = 1
script = ExtResource( 14 )

[node name="Timer" type="Timer" parent="BigText"]
